<?php

/**
 *
 * @file
 * Empty Page module
 * A simple empty page solution. Assists in creating empty menu callbacks, mostly used for pages that only consist of blocks..
 *
 */

define('EMPTY_PAGE_PERM_MANAGE_CALLBACKS', 'manage empty page callbacks');

/**
 * Implementation of hook_perm().
 */
function empty_page_perm() {
  $perms = array(
    EMPTY_PAGE_PERM_MANAGE_CALLBACKS,
  );
  return $perms;
}

/**
 * Implementation of hook_menu().
 */
function empty_page_menu() {
  $items = array();
  
  $items['admin/build/empty-page'] = array(
    'title' => 'Empty Page callbacks',
    'description' => '',
    'page callback' => 'empty_page_admin_overview',
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'file' => 'empty_page.admin.inc',
  );
  
  $items['admin/build/empty-page/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  
  $items['admin/build/empty-page/add'] = array(
    'title' => 'Add Callback',
    'description' => 'Create an empty page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_callbacks_form'),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_LOCAL_TASK,
    'file' => 'empty_page.admin.inc',
    'weight' => 1,
  );
  
  $items['admin/build/empty-page/%/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_callbacks_form', 3),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_CALLBACK,
    'file' => 'empty_page.admin.inc',
  );
  
  $items['admin/build/empty-page/%/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empty_page_admin_delete_form', 3),
    'access arguments' => array(EMPTY_PAGE_PERM_MANAGE_CALLBACKS),
    'type' => MENU_CALLBACK,
    'file' => 'empty_page.admin.inc',
  );
  
  // Create the dynamic callbacks.
  foreach (empty_page_get_callbacks() as $cid => $callback) {
    $items[$callback->path] = array(
      'title' => t($callback->page_title),
      'page callback' => 'empty_page_empty',
      'access callback' => TRUE,
      'type' => MENU_SUGGESTED_ITEM,
    );
  }
  
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function empty_page_theme(&$existing, $type, $theme, $path) {
  $hooks = array();
  $hooks['empty_page_callbacks_manage_render'] = array(
    'file' => 'empty_page.admin.inc',
  );
  return $hooks;
}

/**
 * An Empty Page callback's empty content.
 *
 * @return string $output
 */
function empty_page_empty() {
  return '';
}


/**
 *
 * API
 * 
 */


/**
 * Get all Empty Page callbacks.
 *
 * @return array $callbacks
 */
function empty_page_get_callbacks() {
  $callbacks = array();
  $result = db_query("SELECT * FROM {empty_page} ep ORDER BY ep.changed");
  while ($callback = db_fetch_object($result)) {
    $callbacks[$callback->cid] = $callback;
  }
  return $callbacks;
}

/**
 * Get an Empty Page callback.
 *
 * @param int $cid
 * @return object $callback
 */
function empty_page_get_callback($cid) {
  $callback = db_fetch_object(db_query("SELECT * FROM {empty_page} ep WHERE ep.cid = %d ORDER BY ep.changed", $cid));
  return $callback;
}

/**
 * Save an Empty Page callback.
 *
 * @param object $callback
 * @return int $cid
 */
function empty_page_save_callback($callback) {
  if ($callback->cid) {
    $result = db_query("UPDATE {empty_page} SET path = '%s', page_title = '%s', changed = %d WHERE cid = %d", array($callback->path, $callback->page_title, time(), $callback->cid));
    $ret = $callback->cid;
  }
  else {
    $result = db_query("INSERT INTO {empty_page} SET path = '%s', page_title = '%s',  created = %d, changed = %d", array($callback->path, $callback->page_title, time(), time()));
    $ret = db_last_insert_id('empty_page', 'cid');
  }
  return $ret;
}

/**
 * Delete an Empty Page callback.
 *
 * @param int $cid
 * @return (sql result resource or FALSE)
 */
function empty_page_delete_callback($cid) {
  if (is_numeric($cid)) {
    return db_query("DELETE FROM {empty_page} WHERE cid = %d", $cid);
  }
}

/**
 * Helper function for cleaning / rebuilding menu.
 */
function empty_page_clear_menu_cache() {
  // Rebuild menu.
  menu_rebuild();
}
